<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="specialTraitsBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT DISTINCT mons_traits.traitName, mons_traits.traitDescription FROM monsters_traits as mons_traits LEFT JOIN monsters AS mons ON mons.monsterName = mons_traits.monsterName WHERE mons_traits.monsterName = </value>
  </data>
  <data name="actionsBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT DISTINCT mons_actions.actionName, CASE WHEN mons_actions.charges IS NULL THEN '' ELSE mons_actions.charges END charges, CASE WHEN mons_actions.chargeRefreshRate IS NULL THEN '' ELSE mons_actions.chargeRefreshRate END chargeRefreshRate, mons_actions.actionDescription FROM monsters_actions as mons_actions LEFT JOIN monsters AS mons ON mons.monsterName = mons_actions.monsterName WHERE mons_actions.monsterName = </value>
  </data>
  <data name="statBlockBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT mons.monsterName, mons.size, mons.monsterType, mons.monsterSubtype, mons.alignment, mons.armorClass, mons.hitpointAverage, walk.speed, burrow.speed burrow, climb.speed climb, fly.speed fly, swim.speed swim, mons.strength, str_score.modifier strmod, mons.dexterity, dex_score.modifier dexmod,     mons.constitution,     con_score.modifier conmod,      mons.intelligence,     int_score.modifier intmod,      mons.wisdom,      wis_score.modifier wismod,     mons.charisma,     cha_score.modifier chamod,          str_throws.ability_modifier Str,     str_throws.modifier strthrowmod,      dex_throws.ability_modifier Dex,     dex_throws.modifier dexthrowmod,     con_throws.ability_modifier Con,     con_throws.modifier conthrowmod,     int_throws.ability_modifier Int,     int_throws.modifier intthrowmod,     wis_throws.ability_modifier Wis,     wis_throws.modifier wisthrowmod,     cha_throws.ability_modifier Cha,     cha_throws.modifier chathrowmod,          acidres.source acidres,     bludres.source bludres,     coldres.source coldres,     fireres.source fireres,     forceres.source forceres,     lightres.source lightres,     necres.source necres,     pierceres.source pierceres,     poisres.source poisres,     psyres.source psyres,     radres.source radres,     slashres.source slashres,     thunres.source thunres,     multires.source multires FROM monsters AS mons LEFT JOIN abilityScores AS str_score ON str_score.abilityScore = mons.strength LEFT JOIN abilityScores AS dex_score ON dex_score.abilityScore = mons.dexterity LEFT JOIN abilityScores AS con_score ON con_score.abilityScore = mons.constitution LEFT JOIN abilityScores AS int_score ON int_score.abilityScore = mons.intelligence LEFT JOIN abilityScores AS wis_score ON wis_score.abilityScore = mons.wisdom LEFT JOIN abilityScores AS cha_score ON cha_score.abilityScore = mons.charisma LEFT JOIN monsters_movementTypes AS walk ON walk.monsterName = mons.monsterName AND walk.movementType = 'Walk'  LEFT JOIN monsters_movementTypes AS burrow ON burrow.monsterName = mons.monsterName  AND burrow.movementType = 'Burrow' LEFT JOIN monsters_movementTypes AS climb ON climb.monsterName = mons.monsterName AND climb.movementType = 'Climb' LEFT JOIN monsters_movementTypes AS fly ON fly.monsterName = mons.monsterName AND fly.movementType = 'Fly' LEFT JOIN monsters_movementTypes AS swim ON swim.monsterName = mons.monsterName AND swim.movementType = 'Swim' LEFT JOIN monsters_savingThrows AS str_throws ON str_throws.monsterName = mons.monsterName AND str_throws.ability_modifier = 'Strength' LEFT JOIN monsters_savingThrows AS dex_throws ON dex_throws.monsterName = mons.monsterName AND dex_throws.ability_modifier = 'Dexterity' LEFT JOIN monsters_savingThrows AS con_throws ON con_throws.monsterName = mons.monsterName AND con_throws.ability_modifier = 'Constitution' LEFT JOIN monsters_savingThrows AS int_throws ON int_throws.monsterName = mons.monsterName AND int_throws.ability_modifier = 'Intelligence' LEFT JOIN monsters_savingThrows AS wis_throws ON wis_throws.monsterName = mons.monsterName AND wis_throws.ability_modifier = 'Wisdom' LEFT JOIN monsters_savingThrows AS cha_throws ON cha_throws.monsterName = mons.monsterName AND cha_throws.ability_modifier = 'Charisma' LEFT JOIN monsters_resistances AS acidres on acidres.monsterName = mons.monsterName AND acidres.source = 'Acid' LEFT JOIN monsters_resistances AS bludres on bludres.monsterName = mons.monsterName AND bludres.source = 'Bludgeoning' LEFT JOIN monsters_resistances AS coldres on coldres.monsterName = mons.monsterName AND coldres.source = 'Cold' LEFT JOIN monsters_resistances AS fireres on fireres.monsterName = mons.monsterName AND fireres.source = 'Fire' LEFT JOIN monsters_resistances AS forceres on forceres.monsterName = mons.monsterName AND forceres.source = 'Force' LEFT JOIN monsters_resistances AS lightres on lightres.monsterName = mons.monsterName AND lightres.source = 'Lightning' LEFT JOIN monsters_resistances AS necres on necres.monsterName = mons.monsterName AND necres.source = 'Necrotic' LEFT JOIN monsters_resistances AS pierceres on pierceres.monsterName = mons.monsterName AND pierceres.source = 'Piercing' LEFT JOIN monsters_resistances AS poisres on poisres.monsterName = mons.monsterName AND poisres.source = 'Poison' LEFT JOIN monsters_resistances AS psyres on psyres.monsterName = mons.monsterName AND psyres.source = 'Psychic' LEFT JOIN monsters_resistances AS radres on radres.monsterName = mons.monsterName AND radres.source = 'Radiant' LEFT JOIN monsters_resistances AS slashres on slashres.monsterName = mons.monsterName AND slashres.source = 'Slashing' LEFT JOIN monsters_resistances AS thunres on thunres.monsterName = mons.monsterName AND thunres.source = 'Thunder' LEFT JOIN monsters_resistances AS multires on multires.monsterName = mons.monsterName AND multires.source = 'Bludgeoning, Piercing, and Slashing from nonmagical weapons' WHERE mons.monsterName = </value>
  </data>
  <data name="statBlockBox.AccessibleName" xml:space="preserve">
    <value>SELECT    acidimm.source acidimm,    bludimm.source bludimm,    coldimm.source coldimm,    fireimm.source fireimm,    forceimm.source forceimm,    lightimm.source lightimm,    necimm.source necimm,    pierceimm.source pierceimm,    poisimm.source poisimm,    psyimm.source psyimm,    radimm.source radimm,    slashimm.source slashimm,    thunimm.source thunimm,    multiimm.source multiimm,        blind.source blind,    charm.source charm,    deaf.source deaf,    fright.source fright,    grapp.source grapp,    incap.source incap,    invis.source invis,    para.source para,    petri.source petri,    pois.source pois,    prone.source prone,    restr.source restr,    stun.source stun,    uncon.source uncon,    exhaust.source exhaust,        bs.senseName blindsight,    bs.distance blindsightdistance,   dv.senseName darkvision,    dv.distance darkvisiondistance,    ts.senseName truesight,    ts.distance truesightdistance,    trs.senseName tremorsense,    trs.distance tremorsensedistance, mons.passivePerception,alllang.languageName alllang,ablang.languageName aby,aqlang.languageName aq,aurlang.languageName aur,cellang.languageName celes,comlang.languageName com,deeplang.languageName deep,draclang.languageName drac,druidlang.languageName druid,dwarlang.languageName dwar,elflang.languageName elf,giantlang.languageName giant,gnomlang.languageName gnom,goblang.languageName gob,gnollang.languageName gnoll,halflang.languageName half,ignanlang.languageName ignan,infernlang.languageName infern,orclang.languageName orc,primlang.languageName prim,sylvlang.languageName sylv,terrlang.languageName terr,underlang.languageName under,aaralang.languageName aar, nonelang.languageName none,mons.telepathyDistance,      CASE mons.challengeRating WHEN 0.125 then '1/8' WHEN 0.25 then '1/4' WHEN 0.5 then '1/2' else mons.challengeRating END challengeRating,crexp.expReward FROM monsters AS mons LEFT JOIN monsters_immunities AS acidimm on acidimm.monsterName = mons.monsterName AND acidimm.source = 'Acid' LEFT JOIN monsters_immunities AS bludimm on bludimm.monsterName = mons.monsterName AND bludimm.source = 'Bludgeoning' LEFT JOIN monsters_immunities AS coldimm on coldimm.monsterName = mons.monsterName AND coldimm.source = 'Cold' LEFT JOIN monsters_immunities AS fireimm on fireimm.monsterName = mons.monsterName AND fireimm.source = 'Fire' LEFT JOIN monsters_immunities AS forceimm on forceimm.monsterName = mons.monsterName AND forceimm.source = 'Force' LEFT JOIN monsters_immunities AS lightimm on lightimm.monsterName = mons.monsterName AND lightimm.source = 'Lightning' LEFT JOIN monsters_immunities AS necimm on necimm.monsterName = mons.monsterName AND necimm.source = 'Necrotic' LEFT JOIN monsters_immunities AS pierceimm on pierceimm.monsterName = mons.monsterName AND pierceimm.source = 'Piercing' LEFT JOIN monsters_immunities AS poisimm on poisimm.monsterName = mons.monsterName AND poisimm.source = 'Poison' LEFT JOIN monsters_immunities AS psyimm on psyimm.monsterName = mons.monsterName AND psyimm.source = 'Psychic' LEFT JOIN monsters_immunities AS radimm on radimm.monsterName = mons.monsterName AND radimm.source = 'Radiant' LEFT JOIN monsters_immunities AS slashimm on slashimm.monsterName = mons.monsterName AND slashimm.source = 'Slashing' LEFT JOIN monsters_immunities AS thunimm on thunimm.monsterName = mons.monsterName AND thunimm.source = 'Thunder' LEFT JOIN monsters_immunities AS multiimm on multiimm.monsterName = mons.monsterName AND multiimm.source = 'Bludgeoning, Piercing, and Slashing from nonmagical weapons' LEFT JOIN monsters_immunities AS blind on blind.monsterName = mons.monsterName AND blind.source = 'Blinded' LEFT JOIN monsters_immunities AS charm on charm.monsterName = mons.monsterName AND charm.source = 'Charmed' LEFT JOIN monsters_immunities AS deaf on deaf.monsterName = mons.monsterName AND deaf.source = 'Deafened' LEFT JOIN monsters_immunities AS fright on fright.monsterName = mons.monsterName AND fright.source = 'Frightened' LEFT JOIN monsters_immunities AS grapp on grapp.monsterName = mons.monsterName AND grapp.source = 'Grappled' LEFT JOIN monsters_immunities AS incap on incap.monsterName = mons.monsterName AND incap.source = 'Incapacitated' LEFT JOIN monsters_immunities AS invis on invis.monsterName = mons.monsterName AND invis.source = 'Invisible' LEFT JOIN monsters_immunities AS para on para.monsterName = mons.monsterName AND para.source = 'Paralyzed' LEFT JOIN monsters_immunities AS petri on petri.monsterName = mons.monsterName AND petri.source = 'Petrified' LEFT JOIN monsters_immunities AS pois on pois.monsterName = mons.monsterName AND pois.source = 'Poisoned' LEFT JOIN monsters_immunities AS prone on prone.monsterName = mons.monsterName AND prone.source = 'Prone' LEFT JOIN monsters_immunities AS restr on restr.monsterName = mons.monsterName AND restr.source = 'Restrained' LEFT JOIN monsters_immunities AS stun on stun.monsterName = mons.monsterName AND stun.source = 'Stunned' LEFT JOIN monsters_immunities AS uncon on uncon.monsterName = mons.monsterName AND uncon.source = 'Unconscious' LEFT JOIN monsters_immunities AS exhaust on exhaust.monsterName = mons.monsterName AND exhaust.source = 'Exhaustion' LEFT JOIN monsters_senses AS bs ON bs.monsterName = mons.monsterName AND bs.senseName = 'Blindsight' LEFT JOIN monsters_senses AS dv ON dv.monsterName = mons.monsterName AND dv.senseName = 'Darkvision' LEFT JOIN monsters_senses AS ts ON ts.monsterName = mons.monsterName AND ts.senseName = 'Truesight' LEFT JOIN monsters_languages AS alllang ON alllang.monsterName = mons.monsterName AND alllang.languageName = 'All' LEFT JOIN monsters_languages AS ablang ON ablang.monsterName = mons.monsterName AND ablang.languageName = 'Abyssal' LEFT JOIN monsters_languages AS aqlang ON aqlang.monsterName = mons.monsterName AND aqlang.languageName = 'Aquan' LEFT JOIN monsters_languages AS aurlang ON aurlang.monsterName = mons.monsterName AND aurlang.languageName = 'Auran' LEFT JOIN monsters_languages AS cellang ON cellang.monsterName = mons.monsterName AND cellang.languageName = 'Celestial' LEFT JOIN monsters_languages AS comlang ON comlang.monsterName = mons.monsterName AND comlang.languageName = 'Common' LEFT JOIN monsters_languages AS deeplang ON deeplang.monsterName = mons.monsterName AND deeplang.languageName = 'Deep Speech' LEFT JOIN monsters_languages AS draclang ON draclang.monsterName = mons.monsterName AND draclang.languageName = 'Draconic' LEFT JOIN monsters_languages AS druidlang ON druidlang.monsterName = mons.monsterName AND druidlang.languageName = 'Druidic' LEFT JOIN monsters_languages AS dwarlang ON dwarlang.monsterName = mons.monsterName AND dwarlang.languageName = 'Dwarvish' LEFT JOIN monsters_languages AS elflang ON elflang.monsterName = mons.monsterName AND elflang.languageName = 'Elvish' LEFT JOIN monsters_languages AS giantlang ON giantlang.monsterName = mons.monsterName AND giantlang.languageName = 'Giant' LEFT JOIN monsters_languages AS gnomlang ON gnomlang.monsterName = mons.monsterName AND gnomlang.languageName = 'Gnomish' LEFT JOIN monsters_languages AS goblang ON goblang.monsterName = mons.monsterName AND goblang.languageName = 'Goblin' LEFT JOIN monsters_languages AS gnollang ON gnollang.monsterName = mons.monsterName AND gnollang.languageName = 'Gnoll' LEFT JOIN monsters_languages AS halflang ON halflang.monsterName = mons.monsterName AND halflang.languageName = 'Halfling' LEFT JOIN monsters_languages AS ignanlang ON ignanlang.monsterName = mons.monsterName AND ignanlang.languageName = 'Ignan' LEFT JOIN monsters_languages AS infernlang ON infernlang.monsterName = mons.monsterName AND infernlang.languageName = 'Infernal' LEFT JOIN monsters_languages AS orclang ON orclang.monsterName = mons.monsterName AND orclang.languageName = 'Orc' LEFT JOIN monsters_languages AS primlang ON primlang.monsterName = mons.monsterName AND primlang.languageName = 'Primordial' LEFT JOIN monsters_languages AS sylvlang ON sylvlang.monsterName = mons.monsterName AND Sylvlang.languageName = 'Sylvan' LEFT JOIN monsters_languages AS terrlang ON terrlang.monsterName = mons.monsterName AND terrlang.languageName = 'Terran'LEFT JOIN monsters_languages AS underlang ON underlang.monsterName = mons.monsterName AND underlang.languageName = 'Undercommon' LEFT JOIN monsters_languages AS aaralang ON aaralang.monsterName = mons.monsterName AND aaralang.languageName = 'Aarakocra' LEFT JOIN monsters_languages AS nonelang ON nonelang.monsterName = mons.monsterName AND nonelang.languageName = 'None' LEFT JOIN challengeRatings AS crexp ON crexp.challengeRating = mons.challengeRating LEFT JOIN monsters_senses AS trs ON trs.monsterName = mons.monsterName AND trs.senseName = 'Tremorsense' WHERE mons.monsterName = </value>
  </data>
  <data name="regionalEffectsBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT DISTINCT mons_lairs.regionalEffectsPreface, mons_lairs.regionalEffects, mons_lairs.extraRegionalStuff FROM monsters_lairs as mons_lairs LEFT JOIN monsters AS mons ON mons.monsterName = mons_lairs.monsterName WHERE mons_lairs.monsterName = </value>
  </data>
  <data name="legendaryActionsBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT DISTINCT mons_legActs.legendaryActionName, mons_legActs.legendaryActionDescription FROM monsters_legendaryActions AS mons_legActs LEFT JOIN monsters AS mons ON mons.monsterName = mons_legActs.monsterName WHERE mons_legActs.monsterName = </value>
  </data>
  <data name="lairActionsBox.AccessibleDescription" xml:space="preserve">
    <value>SELECT DISTINCT mons_lairs.monsterLair, mons_lairs.lairPreface, mons_lairs.lairDescription, mons_lairs.lairActions FROM monsters_lairs as mons_lairs LEFT JOIN monsters AS mons ON mons.monsterName = mons_lairs.monsterName WHERE mons_lairs.monsterName = </value>
  </data>
</root>